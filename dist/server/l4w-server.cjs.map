{"version":3,"file":"l4w-server.cjs","mappings":"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AK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;AC9C6C;AAC7C,QAAQ,YAAY,EAAE,qMAAe;AACT;AAC5B,QAAQ,QAAQ,EAAE,sCAAG;;AAEN;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;ACtC6C;AAC7C,QAAQ,YAAY,EAAE,qMAAe;AACT;AAC5B,QAAQ,QAAQ,EAAE,sCAAG;;AAEN;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;AC/C6C;AAC7C,QAAQ,YAAY,EAAE,qMAAe;AACT;AAC5B,QAAQ,QAAQ,EAAE,sCAAG;;AAEN;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;ACnC6C;AAC7C,QAAQ,YAAY,EAAE,qMAAe;AACT;AAC5B,QAAQ,QAAQ,EAAE,sCAAG;;AAEN;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,eAAe;AAC3B;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;AChD6C;AAC7C,QAAQ,YAAY,EAAE,qMAAe;AACT;AAC5B,QAAQ,QAAQ,EAAE,sCAAG;;AAEN;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;ACnC6C;AAC7C,QAAQ,YAAY,EAAE,qMAAe;AACT;AAC5B,QAAQ,QAAQ,EAAE,sCAAG;;AAEN;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,cAAc;AAC1B;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;AC5C6C;AAC7C,QAAQ,YAAY,EAAE,qMAAe;AACT;AAC5B,QAAQ,QAAQ,EAAE,sCAAG;;AAEN;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,YAAY;AACxB;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;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","sources":["webpack://l4w/external node-commonjs \"path\"","webpack://l4w/external commonjs \"express\"","webpack://l4w/external commonjs \"compression\"","webpack://l4w/external node-commonjs \"fs\"","webpack://l4w/external node-commonjs \"https\"","webpack://l4w/./src/common/Constants.ts","webpack://l4w/./src/common/Utils.ts","webpack://l4w/./src/common/GameConfig.ts","webpack://l4w/./src/common/Commons.ts","webpack://l4w/./src/server/session.ts","webpack://l4w/external commonjs \"express-session\"","webpack://l4w/external commonjs \"connect-session-sequelize\"","webpack://l4w/./src/server/security.ts","webpack://l4w/external commonjs \"bcryptjs\"","webpack://l4w/./src/server/database.ts","webpack://l4w/external commonjs \"sequelize\"","webpack://l4w/external commonjs \"lowdb\"","webpack://l4w/external commonjs \"lowdb/adapters/FileSync\"","webpack://l4w/./src/server/models/index.ts","webpack://l4w/./src/server/models/log_access.js","webpack://l4w/./src/server/models/log_security.js","webpack://l4w/./src/server/models/lst_event.js","webpack://l4w/./src/server/models/lst_role.js","webpack://l4w/./src/server/models/usr_event.js","webpack://l4w/./src/server/models/usr_list.js","webpack://l4w/./src/server/models/usr_role.js","webpack://l4w/./src/server/models/usr_save.js","webpack://l4w/./src/server/utils.ts","webpack://l4w/./src/server/constants.ts","webpack://l4w/./src/common/DataDefaults.ts","webpack://l4w/./src/common/StringsConstants.ts","webpack://l4w/./src/server/sanitizer.ts","webpack://l4w/./src/server/services.ts","webpack://l4w/webpack/bootstrap","webpack://l4w/webpack/runtime/compat get default export","webpack://l4w/webpack/runtime/create fake namespace object","webpack://l4w/webpack/runtime/define property getters","webpack://l4w/webpack/runtime/hasOwnProperty shorthand","webpack://l4w/webpack/runtime/make namespace object","webpack://l4w/./src/server/l4w-server.ts"],"sourcesContent":["module.exports = require(\"path\");","module.exports = require(\"express\");","module.exports = require(\"compression\");","module.exports = require(\"fs\");","module.exports = require(\"https\");","export const EVENT_STATE_VAR = \"state\";\n\nexport enum HttpStatus {\n    OK = 200,\n    NO_CONTENT = 204,\n    MOVED_PERMANENTLY = 301,\n    NOT_MODIFIED = 304,\n    BAD_REQUEST = 400,\n    FORBIDDEN = 403,\n    NOT_FOUND = 404,\n    REQUEST_TOO_LONG = 413,\n    IM_A_TEAPOT = 418,\n    INTERNAL_SERVER_ERROR = 500,\n    NOT_IMPLEMENTED = 501\n}\n\nexport enum HttpResponseHeader {\n    LOCATION = \"Location\"\n}\n\nexport enum ResourceType {\n    // Assets (graphic/audio resources)\n    AUTOTILE = \"autotile\",\n    CHAR = \"charset\",\n    FACE = \"faceset\",\n    FAVICON = \"favicon\",\n    SKIN = \"skin\",\n    TILE = \"tile\",\n    PICTURE = \"picture\",\n    POINTER = \"pointer\",\n\n    // Static data (game data that cannot change during gameplay)\n    AUTOTILESET = \"autotileset\",\n    MAP = \"map\",\n    TREE = \"tree\",\n    STRING = \"string\",\n    TILESET = \"tileset\",\n    DIALOG = \"dialog\",\n    GENERIC_MESSAGE = \"generic-message\",\n    CONFIGURATION = \"configuration\",\n\n    // Dynamic data (user-bound data that can change during gameplay)\n    SAVE = \"save\"\n}\n\nexport const enum ScreenSize {\n    ADAPTIVE = \"apt\",\n    NATURAL = \"nat\",\n    NATURAL_X2 = \"nat2\"\n}\n\nexport const enum Tree {\n    MAPS = \"maps\"\n}","import { gameConfig } from \"./GameConfig\";\n\nexport namespace Utils {\n\n    export function isEmpty(obj: any): boolean {\n        if (obj === undefined || obj === null || typeof obj === \"undefined\") {\n            return true;\n        } else if (typeof obj === \"string\") {\n            return obj === \"\";\n        } else if (typeof obj === \"object\" && \"size\" in obj) {\n            return obj.size === 0;\n        } else if (obj.constructor === Array || obj.constructor === String) {\n            return obj.length === 0;\n        } else if(obj.constructor === Object && Object.keys(obj).length === 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Unit test for the Utils.isEmpty method\n     */\n    export function unitTestIsEmpty(): void {\n        // ES6 map\n        let test: any = new Map<string,string>();\n        console.assert(isEmpty(test), \"empty ES6 map\");\n        (<Map<string,string>> test).set(\"a\",\"a\");\n        console.assert(!isEmpty(test), \"not empty ES6 map\");\n        (<Map<string,string>> test).delete(\"a\");\n        console.assert(isEmpty(test), \"empty ES6 map (deleted key)\");\n        \n        // array\n        test = []\n        console.assert(isEmpty(test), \"empty array\");\n        test[0] = 1;\n        console.assert(!isEmpty(test), \"not empty array\");\n        \n        // Array\n        test = new Array<string>();\n        console.assert(isEmpty(test), \"empty Array\");\n        test = (<Array<string>> test).push(\"1\");\n        console.assert(!isEmpty(test), \"not empty Array\");\n        \n        // string\n        test = \"\";\n        console.assert(isEmpty(test), \"empty string\");\n        test = \"a\"\n        console.assert(!isEmpty(test), \"not empty string\");\n       \n        // Object\n        test = new Object();\n        console.assert(isEmpty(test), \"empty Object\");\n        test[\"a\"] = 1;\n        console.assert(!isEmpty(test), \"not empty Object\");\n        delete test[\"a\"];\n        console.assert(isEmpty(test), \"empty Object (deleted property)\");\n        \n        // {}\n        test = {};\n        console.assert(isEmpty(test), \"empty {}\");\n        test[\"a\"] = 1;\n        console.assert(!isEmpty(test), \"not empty {}\");\n        delete test[\"a\"];\n        console.assert(isEmpty(test), \"empty {} (deleted property)\");\n        \n        // basic types\n        console.assert(!isEmpty(true), \"not empty boolean (true)\");\n        console.assert(!isEmpty(false), \"not empty boolean (false)\");\n        console.assert(!isEmpty(0), \"not empty number\");\n        console.assert(!isEmpty(0.0), \"not empty float\");\n    }\n\n    export function mergeMaps<T>(primary: Map<string, T>, secondary: Map<string, T>): Map<string, T> {\n        var newMap: Map<string, T> = new Map<string, T>();\n        function addToNewMap(value: T, index: string, map: Map<string, T>) {\n            newMap.set(index, value);\n        }\n        secondary.forEach(addToNewMap);\n        primary.forEach(addToNewMap);\n        return newMap;\n    }\n\n    export function isNumeric(n: any): boolean {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    export const convertStringToEnum = function <T>(enumObj: any, value: string): T {\n        return enumObj[Object.keys(enumObj).filter(k => enumObj[k] === value)[0]];\n    }\n\n    const CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    export function getRandomString(length?: number): string {\n        if(length === undefined) {\n            length = 8;\n        }\n        return [...Array(length)].map(_ => CHARS[~~(Math.random()*CHARS.length)]).join(\"\");\n    }\n\n    export function now(): number {\n        return (new Date()).getTime();\n    }\n}\n\n/**\n * Convert the value of a String enum to the enum object \n */\nexport const enumFromValue = <T extends Record<string, string>>(_enum: T, val?: string) => {\n    const enumName = (Object.keys(_enum) as Array<keyof T>).find(k => _enum[k] === val)\n    if (!enumName || val === undefined) {\n        return undefined;\n    } else {\n        return _enum[enumName];\n    }\n}\n\nlet lastTracedTimestamp = new Date().getTime();\n\n/**\n * Logs the message if a certain delay has passed from last call\n * \n * @param message Leave undefined for start counting time\n */\nexport function trace(message?: string) {\n    if(gameConfig.development.tracing.enabled) {\n        let newTimestamp = new Date().getTime();\n        if(message !== undefined) {\n            let delta = newTimestamp - lastTracedTimestamp;\n            if(delta >= gameConfig.development.tracing.threshold) {\n                console.log(\" (+ \" + delta + \")\\t\" + message);\n            }\n        }\n        lastTracedTimestamp = newTimestamp;\n    }\n}\n","import { LanguageEnum } from \"./Commons\"\n\n//TODO migrate here values from l4w.properties\n/**\n * Contains game configuration variables.\n * This should be customized according to the needs of the specific game.\n * \n * Having these constant values in the code instead of a resource file\n * is preferrable in order to enable compiler optimizations.\n * (Is it? Perhaps... may be true for numerical and boolean values...)\n * \n * This is ok as long as there is no need for:\n * - different profiles for the same fork/branch\n * - changing config wihtout running the build\n * - conformity to universally recognized best practices\n */\nexport const gameConfig = {\n    maps: {\n        /**\n         * Starting position in the game\n         */\n        start: {\n            map: \"0\",   // id of the map\n            i: 2,   // position i of the hero\n            j: 4    // position i of the hero\n        }\n    },\n    hero: {\n        /**\n         * Default name of the hero\n         */\n        name: \"Fart\",\n\n        /**\n         * Starting charaset of the hero\n         * Other charasets can be placed in: /assets/charaset/ \n         */\n        charaset: \"fart.png\"\n    },\n    ui: {\n        /**\n         * Default language of the game.\n         * Every text string defined using the editors (such as dialog messages) will be considered to be expressed in this language.\n         * Additional supported languages can be added by manually creating a customized clone file here: /data/lang/\n         * The default language will be used as fallback whenever a string is not available in another supported language;\n         * so while default language file should cointains every possible text strings, files for additional languages can omit them.\n         * This can also be used for stuff like: profanity-free language options \n         */\n        lang: LanguageEnum.EN,\n\n        /**\n         * Default game UI skin.\n         * Other skins can be placed in: /assets/skin/ \n         */\n        skin: \"ld3-webskin1.png\",\n\n        /**\n         * Enable or disable L4W command line interface\n         */\n        enableCLI: true,\n        mapper: {\n            scales: [ 0.2, 0.4, 0.6, 0.94 ]\n        }\n    },\n    services: {\n        facebook: {\n            url: \"https://graph.facebook.com\",\n            applicationId: \"1885551381575204\"\n        },\n        google: {\n            oauth: {\n                url: \"https://www.googleapis.com\",\n                applicationId: \"106250700124-f3tm8cc2l6raccir6e5fi9osccuvhaj0.apps.googleusercontent.com\"\n            },\n            recaptcha: {\n                url: \"www.google.com\",\n            }\n        },\n        github: {\n            url: \"api.github.com\"\n        }\n    },\n    development: {\n        tracing: {\n            enabled: true,\n            threshold: 800\n        }\n    }\n}","/**\n * Identify a point on the map, in pixels\n */\nexport interface IPoint {\n    x: number;\n    y: number;\n};\n\n/**\n * Identify the coordinates of a cell on the map\n */\nexport interface ICell {\n    i: number;\n    j: number;\n};\n\nexport interface ISize {\n    w: number;\n    h: number;\n};\n\n/**\n * Represent a point, and contains both the ICell and the IPoint representation\n */\nexport interface IExtendedCell extends IPoint, ICell {\n};\n\n/**\n * Represent a rectangular area as the top-left vertex and its width and height\n */\nexport interface IRectangle extends IPoint, ISize {\n};\n\nexport const enum DirectionEnum {\n    UP,\n    RIGHT,\n    DOWN,\n    LEFT,\n    NONE\n};\n\nexport const enum RelativeDirectionEnum {\n    STRAIGHT,\n    RIGHT,\n    BACK,\n    LEFT\n};\n\nexport const enum SelectionAreaEnum {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    CENTER\n};\n\n/**\n * Set of constants that can be summed in a single number\n * to represent which of the four directions are blocked\n */\nexport class BlockDirection {\n    static NONE: number = 0;\n    static UP: number = Math.pow(2, 0);\n    static DOWN: number = Math.pow(2, 1);\n    static LEFT: number = Math.pow(2, 2);\n    static RIGHT: number = Math.pow(2, 3);\n    static ALL: number = BlockDirection.UP + BlockDirection.DOWN + BlockDirection.LEFT + BlockDirection.RIGHT;\n};\n\n/**\n * Set of constants that can be summed in a single number\n * to represent a boolean state for each of the 8 adiacent cells\n */\nexport class CardinalDirection {\n    static NONE: number = 0;\n    static N: number = Math.pow(2, 0);\n    static S: number = Math.pow(2, 1);\n    static W: number = Math.pow(2, 2);\n    static E: number = Math.pow(2, 3);\n    static NE: number = Math.pow(2, 4);\n    static SE: number = Math.pow(2, 5);\n    static SW: number = Math.pow(2, 6);\n    static NW: number = Math.pow(2, 7);\n    static ALL: number = Math.pow(2, 8) - 1;\n};\nexport let CardinalDirections = [ CardinalDirection.N, CardinalDirection.NE, CardinalDirection.E, CardinalDirection.SE, CardinalDirection.S, CardinalDirection.SW, CardinalDirection.W, CardinalDirection.NW ];\n\n/**\n * Types of action required in order to trigger an action\n */\nexport const enum ActionTriggerEnum {\n    CLICK,\n    TOUCH,\n    OVER,\n    AUTO\n};\n\nexport const enum RotationEnum {\n    OFF,\n    CLOCKWISE,\n    COUNTERCLOCKWISE\n};\n\nexport const enum ScaleEnum {\n    VERY_LOW,\n    LOW,\n    MEDIUM_LOW,\n    MEDIUM,\n    MEDIUM_HIGH,\n    HIGH,\n    VERY_HIGH\n};\n\nexport enum LanguageEnum {\n    IT = \"it\",\n    EN = \"en\"    \n}\n\nexport enum PathfinderEnum {\n    BASIC,\n    D_STAR_LITE\n}\n\nexport interface IEmptyCallback {\n    (): void;\n};\n\nexport interface IResponseCallback {\n    (response?: string): void;\n};\n\nexport interface IBooleanCallback {\n    (success: boolean): void;\n};\n\nexport interface ICellCallback {\n    (c: ICell): void,\n};\n","//@ts-ignore\nimport Session from \"express-session\"\nimport { SessionOptions, Store } from \"express-session\"\n//@ts-ignore\nimport SequelizeSessionInit from \"connect-session-sequelize\"\nlet SequelizeStoreConstructor = SequelizeSessionInit(Store);\nimport { Request as ExpressRequest, Response as ExpressResponse } from \"express\"\n\nimport { security } from \"./security\"\nimport { services } from \"./services\"\nimport { sequelizeInstance } from \"./models/index\"\nimport { database } from \"./database\"\nimport { IEmptyCallback } from \"../common/Commons\";\nimport { IAuthRequest } from \"../common/ServerAPI\";\nimport { Utils } from \"../common/Utils\";\n\n// Declaration merging of express-session's SessionData interface, for adding custom fields\ndeclare module \"express-session\" {\n    interface SessionData {\n        user: string;\n    }\n}\n\nexport namespace session {\n     \n    export let cookieName = \"l4w.session\";\n    \n    export function init() {\n        let secret: string =  process.env.SESSION_SECRET!;\n        let store = new SequelizeStoreConstructor({\n            db: sequelizeInstance,\n            tableName: \"usr_session\"\n        });\n        // Call sync in order to generate the ${tableName} table\n        store.sync();\n        let sessionOptions: SessionOptions = {\n            cookie: security.getCookieSettings(),\n            name: session.cookieName,\n            proxy: true,\n            resave: false,\n            saveUninitialized: true,\n            secret: secret,\n            store: store\n        };\n        return Session(sessionOptions);\n    }\n    \n    export function getUser(request: ExpressRequest): string | undefined {\n        if(request === undefined || request.session === undefined || Utils.isEmpty(request.session.user)) {\n            if(security.isAuthenticationDisabled()) {\n                // Nel caso l'autenticazione sia disabilitata, forza l'utente 0\n                return \"0\";\n            }\n            return undefined;\n        }\n        return request.session.user;\n    }\n    \n    export function setUser(request: ExpressRequest, user: string) {\n        return request.session!.user = user;\n    }\n\n    export function isAuthenticated(request: ExpressRequest): boolean {\n        if(security.isAuthenticationDisabled()) {\n            return true;\n        }\n        return !Utils.isEmpty(getUser(request));\n    }\n\n    export function doLogin(request: ExpressRequest, response: ExpressResponse, onSuccess: IEmptyCallback, onFailure: IEmptyCallback) {\n        if(!session.isAuthenticated(request)) {\n            // No valid session, use post data to authenticate user\n            security.getBodyData(request, response, function(data: any){\n                if(!Utils.isEmpty(data)) {\n                    let authRequest: IAuthRequest;\n                    try {\n                        authRequest = JSON.parse(data);\n                    } catch(e) {\n                        console.error(\"Cannot parse body: \");\n                        console.error(data);\n                        onFailure();\n                        return;\n                    }\n                    let successCallback = function(email?: string) {\n                        database.doUserLogin(email!, request, response);\n                        onSuccess();\n                    }\n                    let errorCallback = function() {\n                        doLogout(request, response, onFailure);\n                    }\n                    if(authRequest.service === \"google\") {\n                        services.validateGoogleToken(request, response, successCallback, errorCallback, authRequest.token);\n                    } else if(authRequest.service === \"facebook\") {\n                        services.validateFacebookToken(request, response, successCallback, errorCallback, authRequest.token, authRequest.userId);\n                    } else {\n                        console.error(\"Unexpected auth service:\" + authRequest.service);\n                        onFailure();\n                    }\n                } else {\n                    onFailure();\n                }\n            });\n        } else {\n            // Valid session found\n            database.logAccess(getUser(request));\n            onSuccess();\n        }\n    }\n        \n    export function doLogout(request: ExpressRequest, response: ExpressResponse, callback: IEmptyCallback) {\n        response.clearCookie(session.cookieName, { path: \"/\" });\n        if(request.session !== undefined) {\n            request.session.destroy(function() {\n                if(request.session !== undefined) {\n                    console.warn(\"Session is not undefined after destroy, is this ok?\");\n                }\n                callback();\n            });\n        } else {\n            callback();\n        }\n    }\n}\n","module.exports = require(\"express-session\");","module.exports = require(\"connect-session-sequelize\");","//@ts-ignore\nimport pkg from \"bcryptjs\";\nconst { hash } = pkg;\nimport { Request as ExpressRequest, Response as ExpressResponse } from \"express\"\nimport { ServerOptions } from \"https\"\nimport { readFileSync } from \"fs\"\nimport { SessionOptions } from \"express-session\"\n\nimport { registerSecurityEvent } from \"./database\"\nimport { HttpStatus } from \"../common/Constants\"\nimport { Utils } from \"../common/Utils\"\nimport { gameConfig } from \"../common/GameConfig\";\n\nexport namespace security {\n    \n    export function isAuthenticationDisabled() {\n        return isDevEnv() && \"true\" === process.env.DISABLE_AUTHENTICATION;\n    }\n    \n    export function logSecurityEvent(event: any, info: string) {\n        if(Utils.isEmpty(info)) {\n            info = \"(empty)\";\n        }\n        registerSecurityEvent(event, info);\n    }\n    \n    export function getBodyData(request: ExpressRequest, response: ExpressResponse, callback: any) {\n        var queryData = \"\";\n        if(request.method === \"POST\") {\n            request.on(\"data\", function(chunk: any) {\n                queryData += chunk;\n                if(queryData.length > 1e6) {\n                    logSecurityEvent(HttpStatus.REQUEST_TOO_LONG, queryData);\n                    queryData = \"\";\n                    response.status(HttpStatus.REQUEST_TOO_LONG).send(\"\");\n                    request.connection.destroy();  \n                }\n            });\n            request.on(\"end\", function() {\n                callback(queryData);\n            });\n\n        } else {\n            callback(null);\n        }\n    }\n    \n    export function validateGoogleTokeninfoResponse(data: any) {\n        if(Utils.isEmpty(data)) {\n            return false;\n        }\n        \n        //see: https://developers.google.com/identity/sign-in/web/backend-auth#verify-the-integrity-of-the-id-token\n\n        //The value of aud in the ID token is equal to one of your app's client IDs.\n        //This check is necessary to prevent ID tokens issued to a malicious app being used to access data about the same user on your app's backend server.\n        if(data.aud !== gameConfig.services.google.oauth.applicationId) {\n            logSecurityEvent(\"Login.aud\", data.aud);\n            console.warn(\"Access token is invalid for this application\");\n            return false;\n        }\n        \n        //The value of iss in the ID token is equal to accounts.google.com or https://accounts.google.com.\n        if(data.iss !== \"accounts.google.com\" && data.iss !== \"https://accounts.google.com\") {\n            logSecurityEvent(\"Login.iss\", data.iss);\n            console.warn(\"Access token is invalid for this user\");\n            return false;\n        }\n        \n        //The expiry time (exp) of the ID token has not passed.\n        if(data.exp < Math.floor((new Date).getTime()/1000)) {\n            console.warn(\"Expiry time passed\");\n            return false;\n        }\n        \n        return true;        \n    }\n\n    export function validateFacebookTokeninfoResponse(data: any, userId?: string) {\n        if(Utils.isEmpty(data)) {\n            return false;\n        }\n\n        //see: https://developers.facebook.com/docs/facebook-login/manually-build-a-login-flow#checktoken\n\n        // Check that access token is valid for this application\n        if(data.app_id !== gameConfig.services.facebook.applicationId) {\n            logSecurityEvent(\"Login.aud\", data.app_id);\n            console.warn(\"Access token is invalid for this application\");\n            return false;\n        }\n        \n        // Check that access token is valid for this user\n        if(data.user_id !== userId) {\n            logSecurityEvent(\"Login.iss\", data.user_id);\n            console.warn(\"Access token is invalid for this user\");\n            return false;\n        }\n\n        // Check validity flag\n        if(!data.is_valid) {\n            console.warn(\"Flag is_valid is not set to true\");\n            return false;\n        }\n\n        //The expiry time (expires_at) of the ID token has not passed.\n        if(data.expires_at < Math.floor((new Date).getTime()/1000)) {\n            console.warn(\"Expiry time passed\");\n            return false;\n        }\n\n        return true;\n    }\n\n    export function validateGoogleReCaptchaResponse(gResponse: any): boolean {\n        //see: https://developers.google.com/recaptcha/docs/v3#site_verify_response\n        if(gResponse.success !== true) {\n            return false;\n        }\n        if(gResponse.score < 0.5) {\n            return false;\n        }\n        return true;\n    }\n    \n    export function getCookieSettings(): SessionOptions[\"cookie\"] {\n        return {\n            maxAge: 30 * 24 * 60 * 60 * 1000, // 30 days\n            secure: !isDevEnv(), // In development, cookies will work on http connection\n            sameSite: \"lax\"\n        };\n    }\n    \n    export function requestFilter(req: ExpressRequest, res: ExpressResponse) {\n        // Always redirect to https\n        if (!req.secure && req.get(\"x-forwarded-proto\") !== \"https\") {\n            return res.redirect(\"https://\" + req.get(\"host\") + req.url);\n        }\n        // Explicitly force HTTPS\n        res.setHeader(\"Strict-Transport-Security\",\"max-age=31536000\");\n        // Enable browser XSS protection\n        res.setHeader(\"X-XSS-Protection\",\"1;mode=block\");\n        // Prevent MIME-sniffing attacks (definitely not useless)\n        res.setHeader(\"X-Content-Type-Options\",\"nosniff\");\n        // Allow framing only from trusted sources\n        res.setHeader(\"X-Frame-Options\", \"ALLOW-FROM http://rpt.altervista.org\");\n        // Very basic CSP\n        res.setHeader(\"Content-Security-Policy\",\"default-src 'self' 'unsafe-eval' 'unsafe-inline' blob: data: \" \n            // Google Authentication\n            + \"https://*.gstatic.com https://*.googleapis.com https://*.google.com \"\n            // Facebook Authentication\n            + \"https://connect.facebook.net https://www.facebook.com https://web.facebook.com https://graph.facebook.com \"\n            // CDN scripts\n            + \"https://code.jquery.com https://cdnjs.cloudflare.com https://cdn.jsdelivr.net\");\n        // Random referrer policy\n        res.setHeader(\"Referrer-Policy\", \"origin-when-cross-origin\");\n        // HttpOnly: mitigates XSS attacks.\n        // SameSite=Strict: defense against some classes of CSRF attacks\n        res.setHeader(\"Set-Cookie\", \"HttpOnly;SameSite=Strict\");\n\n        // Reduce information exposure\n        res.removeHeader(\"Server\");\n        res.removeHeader(\"X-Powered-By\");\n    }\n\n    /**\n     * NB this cannot be used for password hashing, since it uses a fixed salt\n     * \n     * @param plaintext string to hash\n     */\n    export function computeUnsafeHash(plaintext: string): Promise<string> {\n        return hash(plaintext, \"$2b$10$OBjW2ZGF6rpUJKWEA9/kmO\");\n    }\n\n    /**\n     * Return a server configuration options for local development use only\n     */\n    export function getLocalServerOptions(): ServerOptions {\n        if(!isDevEnv()) {\n            console.error(\"Cannot use local server options when ENV !== development\");\n            process.exit();\n        }\n        return {\n            key: readFileSync(\"assets/localdev-key.pem\"),\n            cert: readFileSync(\"assets/localdev-cert.pem\")\n        };\n    }\n\n    export function sanitizeIssueDescription(description: string): string {\n        // Should be rendered as a quote\n        description = description.split(\"\\n\").join(\"\\n>\");\n        // Should not contains active links\n        description = description.split(\"http\").join(\"ht#p\");\n        description = description.split(\"href\").join(\"hr#f\");\n        description = description.replace(/\\(.+[^ ]\\.[^ ].+\\)/g, \"(###)\");\n        // Should not contains javascript\n        description = description.split(\"javascript\").join(\"javascri#t\");\n        return description;\n    }\n}\n\nlet flagAlertNoEndVar = false;\n\nexport function isDevEnv() {\n    if(process.env.NODE_ENV === undefined) {\n        if(flagAlertNoEndVar) {\n            flagAlertNoEndVar = true;\n            console.warn(\"No ENV defined, defaulting to development\");\n        }\n        // This is a bad practice, but necessary in order to\n        // being able to run the node server locally without any config\n        return true;\n    }\n    return \"development\" === process.env.NODE_ENV;\n}\n\nexport function useSSLDatabaseConnection() {\n    return !isDevEnv();\n}","module.exports = require(\"bcryptjs\");","import { Sequelize } from \"sequelize\"\nimport * as LowdbModule from \"lowdb\";\nimport * as FileSyncModule from \"lowdb/adapters/FileSync\"\nconst lowdb: LowdbModule.lowdb = LowdbModule[\"default\"];\nconst fileSync: LowdbModule.AdapterSync<any> = FileSyncModule[\"default\"];\nimport { Request as ExpressRequest, Response as ExpressResponse } from \"express\"\n\nimport { LanguageEnum } from \"../common/Commons\"\nimport { HttpStatus, ResourceType } from \"../common/Constants\"\nimport { models } from \"./models/index\"\nimport { sequelizeInstance } from \"./models/index\"\nimport * as utils from \"./utils\"\nimport { constants } from \"./constants\"\nimport { DataDefaults } from \"../common/DataDefaults\"\nimport { gameConfig } from \"../common/GameConfig\"\nimport { IDialogNode, IDialogEdge, IGenericMessage } from \"../common/model/Dialog\";\nimport { IMap } from \"../common/model/Map\";\nimport { IAutoTileset, ITileset } from \"../common/model/Tileset\";\nimport { enumFromValue, Utils } from \"../common/Utils\";\nimport { GLOBAL_GROUP_ID } from \"../common/StringsConstants\";\nimport { security } from \"./security\";\nimport { session } from \"./session\";\nimport { sanitizeDialog, sanitizeMap } from \"./sanitizer\";\n\n/**\n * This module manage persistency for:\n * - Game data: on lowdb files, written only during development, and read at runtime\n * - User data: on PG database, read and written only during runtime\n */\nexport namespace database {\n\n    type dialogSchemaType = [\n        {\n            id: string;\n            value: {\n                nodes: IDialogNode[],\n                edges: IDialogEdge[]\n            }\n        }\n    ];\n\n    type mapSchemaType = {\n        id: number;\n        value: IMap;\n    };\n\n    type tilesetSchemaType = {\n        id: number;\n        value: ITileset;\n    };\n\n    type autotilesetSchemaType = {\n        id: number;\n        value: IAutoTileset[];\n    };\n    \n    type genericMessageSchemaType = {\n        id: number;\n        value: IGenericMessage;\n    };\n\n    type stringsSchemaType = {\n        id: number;\n        value: string;\n    };\n\n    type treeSchemaType = {\n        id: number;\n        value: any;\n    };\n\n    let gameData: {\n        dialogs: LowdbModule.LowdbSync<dialogSchemaType>;\n        maps: LowdbModule.LowdbSync<mapSchemaType>;\n        trees: LowdbModule.LowdbSync<treeSchemaType>;\n        tilesets: LowdbModule.LowdbSync<tilesetSchemaType>;\n        autotileset: LowdbModule.LowdbSync<autotilesetSchemaType>;\n        genericMessages: LowdbModule.LowdbSync<genericMessageSchemaType>;\n        langs: Map<string, LowdbModule.LowdbSync<stringsSchemaType>>;\n    };\n\n    let flagPostgresUnavailable = false;\n    \n    export function logAccess(user?: string) {\n        if(flagPostgresUnavailable || user === undefined) {\n            return;\n        }\n        // User already known, log this access\n        models.get(\"log_access\")!.update({\n            last_seen : new Date(),\n            //@ts-ignore\n            access_counter : Sequelize.literal(\"access_counter + 1\")\n        }, {\n            where : {\n                user : user,\n            },\n\n        }).then(function(r: any) {\n            // Nothing to do\n        }, function(error: any) {\n            console.log(error);\n        });\n    };\n    \n    function manageQueryError(response: any, error: any) {\n        console.error(error);\n        response.status(HttpStatus.BAD_REQUEST).send(\"\");\n    };\n\n    /**\n     * Method called on module intialization, it will:\n     * - load the game file database\n     * - initialize the PG database connection\n     */\n    export async function init(): Promise<boolean> {\n        return new Promise(async function(resolve, reject) {\n            // Load game data from json files\n            gameData = {\n                dialogs: lowdb(new fileSync(\"data/dialogs.json\")),\n                maps: lowdb(new fileSync(\"data/maps.json\")),\n                trees: lowdb(new fileSync(\"data/trees.json\")),\n                tilesets: lowdb(new fileSync(\"data/tilesets.json\")),\n                autotileset: lowdb(new fileSync(\"data/autotilesets.json\")),\n                genericMessages: lowdb(new fileSync(\"data/dynmsgs.json\")),\n                langs: new Map<string, LowdbModule.LowdbSync<stringsSchemaType>>()\n            };\n\n            // Load the language files\n            let files = await utils.listFiles(\"data/lang/\");\n            for(let file of files) {\n                try {\n                    // example: gameData.langs.it: {database from messages_it.json}\n                    let lang = file.replace(\"messages_\",\"\").replace(\".json\",\"\");\n                    gameData.langs.set(lang, lowdb(new fileSync(\"data/lang/\" + file)));\n                } catch(e) {\n                    console.error(\"Error while reading language file: \" + file);\n                    console.trace(e);\n                }\n            }\n\n            // Test PostGres authentication\n            if(sequelizeInstance !== undefined) {\n                try {\n                    console.log(\"Testing Sequelize authentication...\");\n                    await sequelizeInstance.authenticate();\n                    console.log(\"Sequelize authentication OK\");\n                    // Database ready\n                    resolve(true);\n                    return;\n                } catch(e) {\n                    console.error(e);\n                }\n            }\n            // Manage database connection fail\n            console.info(\"PostgreSQL database not available, functionalities will be limitated\");\n            flagPostgresUnavailable = true;\n            resolve(false);\n        });\n    }\n\n    export function read(type: ResourceType, file: string, user: string | undefined, response: any, lang?: string) {\n        let langVal = enumFromValue(LanguageEnum, lang);\n        switch (type) {\n            case ResourceType.MAP:\n                let map: IMap = gameData.maps.get([\"maps\", file]).value();\n                if (map === undefined) {\n                    console.log(\"Map \\\"\" + file + \"\\\" not found, returning default\");\n                    map = DataDefaults.getMap();\n                    map.id = file;\n                }\n                response.json(map);\n                break;\n            case ResourceType.TREE:\n                let tree = gameData.trees.get([\"trees\", file]).value();\n                if (tree === undefined) {\n                    console.log(\"Tree \\\"\" + file + \"\\\" not found, returning default\");\n                    tree = DataDefaults.getTree();\n                    tree.id = file\n                }\n                response.json(tree);\n                break;\n            case ResourceType.TILESET:\n                let tileset: ITileset = gameData.tilesets.get(\"tilesets\")\n                    [\"find\"]({image: file})\n                    .value();\n                if (tileset === undefined) {\n                    console.log(\"Tileset \\\"\"+ file + \"\\\" not found, returning default\");\n                    tileset = DataDefaults.getTileset();\n                    tileset.image = file;\n                }\n                response.json(tileset);\n                break;\n            case ResourceType.AUTOTILESET:\n                let autotileset: IAutoTileset[] = gameData.autotileset.get(\"autotilesets\").value();\n                if (autotileset === undefined) {\n                    // No autotileset data found, return empty array\n                    autotileset = [];\n                }\n                response.json(autotileset);\n                break;\n            case ResourceType.STRING:\n                let value = getString(langVal, GLOBAL_GROUP_ID, file);\n                if(value !== undefined) {\n                    response.send(value);\n                } else {\n                    response.status(HttpStatus.NOT_FOUND)\n                        .send(DataDefaults.getString());\n                }\n                break;\n            case ResourceType.DIALOG:\n                if(!Utils.isNumeric(file)) {\n                    console.warn(\"Cannot read not-numeric dialog id: \" + file);\n                    response.status(HttpStatus.BAD_REQUEST)\n                        .send(\"\");\n                }\n                let dialogId = parseInt(file);\n                let nodes: IDialogNode[] = [];\n                let edges: IDialogEdge[] = [];\n                traverseDialogDatabase(dialogId, DataDefaults.FIRST_ELEM_ID, nodes, edges);\n                if(nodes.length > 0) {\n                    populateDialogMessages(dialogId, nodes, edges, langVal);\n                    response.send({\n                        nodes: nodes,\n                        edges: edges\n                    });\n                } else {\n                    response.status(HttpStatus.NOT_FOUND)\n                        .send(\"\");\n                }\n                break;\n            case ResourceType.SAVE:\n                if (!Utils.isEmpty(user) && !flagPostgresUnavailable) {\n                    models.get(\"usr_save\")![\"findOne\"]({\n                        where : {\n                            user : user!,\n                            id : file\n                        },\n                        attributes : [ \"save\" ]\n                    }).then(\n                        function(result: any) {\n                            if (!Utils.isEmpty(result)) {\n                                response.send(result.dataValues.save);\n                            } else {\n                                response.send(DataDefaults.getSave());\n                            }\n                        },\n                        function(error: any) {\n                            console.log(error);\n                            response\n                                .status(HttpStatus.INTERNAL_SERVER_ERROR)\n                                .send(DataDefaults.getSave());\n                        });\n                } else {\n                    response.status(HttpStatus.OK).send(DataDefaults.getSave());\n                }\n                break;\n            default:\n                console.error(\"database.read - Unexpected case: \" + type);\n                response.status(HttpStatus.NOT_FOUND).send(DataDefaults.getString());\n        };\n    }\n\n    export function write(type: string, file: string, data: string, user: string, response: any) {\n        switch (type) {\n            case ResourceType.MAP:\n                let newMap: IMap = JSON.parse(data);\n                sanitizeMap(newMap);\n                gameData.maps.set([\"maps\", file], newMap).write();\n                response.status(HttpStatus.OK).send(\"\");\n                break;\n            case ResourceType.TREE:\n                let newTree: IMap = JSON.parse(data)[0];\n                gameData.trees.set([\"trees\", file], newTree).write();\n                response.status(HttpStatus.OK).send(\"\");\n                break;\n            case ResourceType.TILESET:\n                let oldTileset = gameData.tilesets.get(\"tilesets\")\n                    [\"find\"]({image: file});\n                let newTileset: IMap = JSON.parse(data);\n                if (oldTileset.value() !== undefined) {\n                    oldTileset.assign(newTileset).write();\n                } else {\n                    gameData.tilesets.set([\"tilesets\", file], newTileset).write();\n                }\n                response.status(HttpStatus.OK).send(\"\");\n                break;\n            case ResourceType.AUTOTILESET:\n                let autoTilesets: IAutoTileset[] = JSON.parse(data);\n                gameData.autotileset.set(\"autotilesets\", autoTilesets).write();\n                response.status(HttpStatus.OK).send(\"\");\n                break;\n            case ResourceType.STRING:\n                let id = setString(GLOBAL_GROUP_ID, file, data);\n                response.status(HttpStatus.OK).send(id + \"\");\n                break;\n            case ResourceType.DIALOG:\n                // Extract a list of nodes and edges from the dialog tree, and save them to DB\n                let dialogData: {\n                    nodes: IDialogNode[];\n                    edges: IDialogEdge[];\n                } = JSON.parse(data);\n                let nodesList = dialogData.nodes;\n                let edgesList = dialogData.edges;\n\n                if(!Utils.isNumeric(file)) {\n                    response.status(HttpStatus.BAD_REQUEST).send(\"DialogId should be numeric: \" + file);\n                    return;\n                }\n                let dialogId = parseInt(file);\n                if(dialogId === DataDefaults.DEFAULT_ID) {\n                    // Assign an incremental id to this dialog\n                    let maxId = DataDefaults.DEFAULT_ID;\n                    for(let id of gameData.dialogs.keys().value()) {\n                        if(Utils.isNumeric(id) && parseInt(id) > maxId) {\n                            maxId = parseInt(id);\n                        }\n                    }\n                    dialogId = (maxId + 1);\n                }\n                // Save dialog strings\n                let groupdId = getDialogGroupId(dialogId);\n                clearStrings(groupdId);\n                for(let node of nodesList) {\n                    if(node.message !== undefined) {\n                        setString(groupdId, getNodeMessageStringId(node), node.message);\n                    }\n                }\n                for(let edge of edgesList) {\n                    if(edge.message !== undefined) {\n                        setString(groupdId, getEdgeMessageStringId(edge), edge.message);\n                    }\n                }\n                sanitizeDialog(nodesList, edgesList);\n\n                gameData.dialogs.unset(dialogId).write();\n                gameData.dialogs.set([dialogId, \"nodes\"], nodesList).write();\n                gameData.dialogs.set([dialogId, \"edges\"], edgesList).write();\n                response.status(HttpStatus.OK).send(dialogId + \"\");\n                break;\n            case ResourceType.SAVE:\n                if(flagPostgresUnavailable) {\n                    response.status(HttpStatus.OK).send(\"\");\n                    return;\n                }\n                models.get(\"usr_save\")![\"upsert\"]({\n                    user: parseInt(user),\n                    id : parseInt(file),\n                    date: new Date(),\n                    name: undefined,\n                    save : JSON.parse(data)\n                }).then(function(result: any) {\n                    response.status(HttpStatus.OK).send(\"\");\n                }, function(error: any) {\n                    manageQueryError(response, error);\n                });\n                break;\n            default:\n                console.error(\"Unexpected case: \" + type);\n                response.status(HttpStatus.NOT_FOUND).send(\"\");\n        }\n    }\n\n    export function doUserLogin(mail: string, request: ExpressRequest, response: ExpressResponse) {\n        if(flagPostgresUnavailable) {\n            response.status(HttpStatus.NOT_IMPLEMENTED).send(\"\");\n        }\n        security\n            .computeUnsafeHash(mail)\n            .catch((reason: any) => {\n                console.error(reason);\n                response.status(HttpStatus.INTERNAL_SERVER_ERROR).send(\"\");\n            })\n            .then((hashedMail) => {\n                if(hashedMail === undefined) {\n                    console.log(\"Hash not available\");\n                    response.status(HttpStatus.INTERNAL_SERVER_ERROR).send(\"\");\n                    return;\n                }\n                models.get(\"usr_list\")![\"findOne\"]({\n                    where: {\n                        mail: hashedMail\n                    }\n                }).then(function(user_record: any) {\n                    if(user_record == null) {\n                        // First access, create the user\n                        models.get(\"usr_list\")![\"upsert\"]({\n                            mail: hashedMail,\n                        }).then(function(updated: any) {\n                            // Get the new user record\n                            models.get(\"usr_list\")![\"findOne\"]({\n                                where: {\n                                    mail: hashedMail\n                                }\n                            }).then(function(user_new_record: any) {\n                                if(user_record == null) {                        \n                                    // Add user id to session\n                                    session.setUser(request, user_new_record.user);\n                                    request.session!.save(function(err) {\n                                        if(!Utils.isEmpty(err)) {\n                                            console.error(\"Error while saving session: %s\", err);\n                                        }\n                                    });\n                                    \n                                    // Send welcome event to the new user\n                                    models.get(\"usr_event\")![\"upsert\"]({\n                                        user: user_new_record.user,\n                                        event: constants.event.WELCOME,\n                                        date: new Date()\n                                    }).then(function(res: any) {\n                                    }, function(error: any) {\n                                        console.log(error);\n                                    });\n                                    \n                                    // Log first access for the new user user\n                                    models.get(\"log_access\")![\"upsert\"]({\n                                        user: user_new_record.user,\n                                        first_seen: new Date(),\n                                        last_seen: new Date(),\n                                        access_counter: 1\n                                    }).then(function(res: any) {\n                                    }, function(error: any) {\n                                        console.log(error);\n                                    });\n                                } else {\n                                    console.error(\"Registration failed for: \" + hashedMail);\n                                }\n                            }, function(error: any) {\n                                console.log(error);\n                                response.status(HttpStatus.INTERNAL_SERVER_ERROR).send(\"\");\n                            });\n                        }, function(error: any) {\n                            console.log(error);\n                            response.status(HttpStatus.INTERNAL_SERVER_ERROR).send(\"\");\n                        });\n                    } else {\n                        // Add user id to session\n                        session.setUser(request, user_record.user);\n                        request.session!.save(function(err) {\n                            if(!Utils.isEmpty(err)) {\n                                console.error(\"Error while saving session: %s\", err);\n                            }\n                        });\n                        \n                        // Log this access\n                        logAccess(user_record.user);\n                    }\n                }, function(error: any) {\n                    console.log(error);\n                    response.status(HttpStatus.INTERNAL_SERVER_ERROR).send(\"\");\n                });\n            });\n    }\n\n    export function getNews(user: string, response: any) {\n        if (Utils.isEmpty(user) || flagPostgresUnavailable) {\n            response.json({});\n        } else {\n            models.get(\"usr_event\")![\"findAll\"]({\n                where : {\n                    user : user\n                },\n                attributes : [ \"event\" ],\n            }).then(function(events: any) {\n                if (!Utils.isEmpty(events)) {\n                    var eventsArray = new Array;\n                    for (var i = 0; i < events.length; i++) {\n                        eventsArray.push(events[i].event);\n                    }\n                    models.get(\"lst_event\")![\"findAll\"]({\n                        where : {\n                            event : eventsArray\n                        }\n                    }).then(function(datas: any) {\n                        response.json(datas);\n                    });\n                } else {\n                    response.json({});\n                }\n            })\n        }\n    }\n\n    function traverseDialogDatabase(dialogId: number, nodeId: number, nodes: IDialogNode[], edges: IDialogEdge[], parentEdgeId?: number): void {\n        let node: IDialogNode = gameData.dialogs.get([dialogId, \"nodes\"])\n            [\"find\"]({id: nodeId})\n            .value();\n        if(node !== undefined) {\n            nodes.push(node);\n            if(node.edgeIds !== undefined) {\n                for(let edgeId of node.edgeIds) {\n                    let edge: IDialogEdge = gameData.dialogs.get([dialogId, \"edges\"])\n                        [\"find\"]({id: edgeId})\n                        .value();\n                    if(edge !== undefined) {\n                        edges.push(edge);\n                        if(edge.nodeId !== undefined) {\n                            traverseDialogDatabase(dialogId, edge.nodeId, nodes, edges, edgeId);\n                        }                    \n                    } else {\n                        console.error(\"dialog \" + dialogId + \"- node \" + node.id + \" reference not-existing edge: \" + edgeId);\n                    }\n                }\n            }\n        } else {\n            if(parentEdgeId === undefined) {\n                console.error(\"dialog \" + dialogId + \"- not-existing node: \" + nodeId);\n            } else {\n                console.error(\"dialog \" + dialogId + \"- edge \" + parentEdgeId + \" reference not-existing node: \" + nodeId);\n            }\n        }\n    }\n\n    function getString(lang: LanguageEnum | undefined, groupId: string, id: string): string | undefined {\n        if(lang === undefined || !gameData.langs.has(lang)) {\n            lang = gameConfig.ui.lang;\n        }\n        let langMap = gameData.langs.get(lang);\n        if(langMap === undefined) {\n            console.error(\"Cannot load language: \" + lang);\n        } else {\n            if(langMap.has([groupId, id]).value()) {\n                return langMap.get([groupId, id]).value();\n            }\n            if(lang !== gameConfig.ui.lang) {\n                // Fallback on default language\n                langMap = gameData.langs.get(gameConfig.ui.lang)!;\n                if(langMap === undefined) {\n                    console.error(\"Cannot load default language: \" + lang);\n                } else if(langMap.has([groupId, id]).value()) {\n                    return langMap.get([groupId, id]).value();\n                } \n            }\n        }\n        return;\n    }\n\n    function clearStrings(groupId: string) {\n        let langMap = gameData!.langs.get(gameConfig.ui.lang);\n        if(langMap === undefined) {\n            console.error(\"Cannot load default language: \" + langMap);\n        } else {\n            langMap.unset(groupId).write();\n        }\n    }\n\n    function setString(groupId: string, id: string | undefined, value: string): string | undefined {\n        if(Utils.isEmpty(value) || value.trim().length === 0) {\n            return;\n        }\n        let langMap = gameData!.langs.get(gameConfig.ui.lang);\n        if(langMap === undefined) {\n            console.error(\"Cannot load default language: \" + langMap);\n        } else {\n            if(id === undefined) {\n                let idNum;\n                if(!langMap.has(groupId).value()) {\n                    idNum = DataDefaults.FIRST_ELEM_ID;\n                } else {\n                    // Assign an incremental id\n                    let maxId = DataDefaults.DEFAULT_ID;\n                    for(let id of langMap.get(groupId).keys().value()) {\n                        if(Utils.isNumeric(id) && parseInt(id) > maxId) {\n                            maxId = parseInt(id);\n                        }\n                    }\n                    idNum = (maxId + 1);\n                }\n                id = idNum + \"\";\n            }\n            langMap.set([groupId, id], value.trim()).write();\n            return id;\n        }\n        return;\n    }\n\n    function populateDialogMessages(dialogId: number, nodes: IDialogNode[], edges: IDialogEdge[], lang?: LanguageEnum) {\n        for(let node of nodes) {\n            node.message = getString(lang, getDialogGroupId(dialogId), getNodeMessageStringId(node));\n        }\n        for(let edge of edges) {\n            edge.message = getString(lang, getDialogGroupId(dialogId), getEdgeMessageStringId(edge));\n        }\n    }\n\n    function getDialogGroupId(dialogId: number) {\n        return \"D\" + dialogId;\n    }\n\n    function getNodeMessageStringId(node: IDialogNode) {\n        return \"N\" + node.id + \"M\";\n    }\n\n    function getEdgeMessageStringId(edge: IDialogEdge) {\n        return \"E\" + edge.id + \"M\";\n    }\n}\n\nexport function registerSecurityEvent(event: string, info: string) {\n    models.get(\"log_security\")![\"upsert\"]({\n        event: event,\n        info: info,\n        date: new Date()\n    });\n}\n","module.exports = require(\"sequelize\");","module.exports = require(\"lowdb\");","module.exports = require(\"lowdb/adapters/FileSync\");","import { Options } from \"sequelize\"\nimport * as SequelizeModule from \"sequelize\"\n\nimport { useSSLDatabaseConnection } from \"../security\"\n\nexport let models: Map<String, SequelizeModule.Model> = new Map();\nexport let sequelizeInstance: SequelizeModule.Sequelize; \n\nif (process.env.DATABASE_URL === undefined) {\n    console.warn(\"Env variable DATABASE_URL undefined\");\n} else {\n    initSequelizeModules();\n}\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nfunction initSequelizeModules() {\n    let ssl: any = false;\n    if(useSSLDatabaseConnection()) {\n        ssl = {\n            require: true,\n            rejectUnauthorized: false // https://stackoverflow.com/a/61350416/2700039\n        };\n    }\n    let sequelizeOptions: Options = {\n        dialect: \"postgres\",\n        protocol: \"postgres\",\n        dialectOptions: {\n            ssl: ssl\n        },\n        define: {\n            timestamps: false\n        },\n        logging: false\n    };\n\n    sequelizeInstance = new SequelizeModule.Sequelize(process.env.DATABASE_URL!, sequelizeOptions);\n\n    // Ugly but safer then dynamic module import\n    // Need to use \"require\" instead of \"import\" since there are no TS definitions\n    let sequelizeModelModule: any;\n    sequelizeModelModule = require(\"./log_access.js\");\n    onSequelizeModuleImport(sequelizeModelModule);\n    sequelizeModelModule = require(\"./log_security.js\");\n    onSequelizeModuleImport(sequelizeModelModule);\n    sequelizeModelModule = require(\"./lst_event.js\");\n    onSequelizeModuleImport(sequelizeModelModule);\n    sequelizeModelModule = require(\"./lst_role.js\");\n    onSequelizeModuleImport(sequelizeModelModule);\n    sequelizeModelModule = require(\"./usr_event.js\");\n    onSequelizeModuleImport(sequelizeModelModule);\n    sequelizeModelModule = require(\"./usr_list.js\");\n    onSequelizeModuleImport(sequelizeModelModule);\n    sequelizeModelModule = require(\"./usr_role.js\");\n    onSequelizeModuleImport(sequelizeModelModule);\n    sequelizeModelModule = require(\"./usr_save.js\");\n    onSequelizeModuleImport(sequelizeModelModule);\n}\n\nfunction onSequelizeModuleImport(importedModelModule: any) {\n    try {\n        let model = importedModelModule.default.init(sequelizeInstance, SequelizeModule.Sequelize);\n        models.set(model.name, model);\n    } catch(e) {\n        console.trace(e);\n        process.exit();\n    };\n}\n","import * as SequelizeModule from \"sequelize\";\nconst { DataTypes } = SequelizeModule;\nimport pgk from \"sequelize\";\nconst { Model } = pgk;\n\nexport default class log_access extends Model {\n  static init(sequelize, DataTypes) {\n  super.init({\n    user: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      references: {\n        model: 'usr_list',\n        key: 'user'\n      }\n    },\n    first_seen: {\n      type: DataTypes.DATE,\n      allowNull: true\n    },\n    last_seen: {\n      type: DataTypes.DATE,\n      allowNull: true\n    },\n    access_counter: {\n      type: DataTypes.INTEGER,\n      allowNull: true\n    }\n  }, {\n    sequelize,\n    tableName: 'log_access',\n    schema: 'public',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"log_access_key\",\n        unique: true,\n        fields: [\n          { name: \"user\" },\n        ]\n      },\n    ]\n  });\n  return log_access;\n  }\n}\n","import * as SequelizeModule from \"sequelize\";\nconst { DataTypes } = SequelizeModule;\nimport pgk from \"sequelize\";\nconst { Model } = pgk;\n\nexport default class log_security extends Model {\n  static init(sequelize, DataTypes) {\n  super.init({\n    event: {\n      type: DataTypes.STRING(15),\n      allowNull: false,\n      primaryKey: true\n    },\n    info: {\n      type: DataTypes.STRING(127),\n      allowNull: true\n    },\n    date: {\n      type: DataTypes.DATE,\n      allowNull: true\n    }\n  }, {\n    sequelize,\n    tableName: 'log_security',\n    schema: 'public',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"log_security_key\",\n        unique: true,\n        fields: [\n          { name: \"event\" },\n        ]\n      },\n    ]\n  });\n  return log_security;\n  }\n}\n","import * as SequelizeModule from \"sequelize\";\nconst { DataTypes } = SequelizeModule;\nimport pgk from \"sequelize\";\nconst { Model } = pgk;\n\nexport default class lst_event extends Model {\n  static init(sequelize, DataTypes) {\n  super.init({\n    event: {\n      autoIncrement: true,\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true\n    },\n    message: {\n      type: DataTypes.STRING(511),\n      allowNull: true\n    },\n    type: {\n      type: DataTypes.CHAR(1),\n      allowNull: true\n    },\n    action: {\n      type: DataTypes.CHAR(31),\n      allowNull: true\n    },\n    action_key: {\n      type: DataTypes.CHAR(31),\n      allowNull: true\n    }\n  }, {\n    sequelize,\n    tableName: 'lst_event',\n    schema: 'public',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"l4w_event_key\",\n        unique: true,\n        fields: [\n          { name: \"event\" },\n        ]\n      },\n    ]\n  });\n  return lst_event;\n  }\n}\n","import * as SequelizeModule from \"sequelize\";\nconst { DataTypes } = SequelizeModule;\nimport pgk from \"sequelize\";\nconst { Model } = pgk;\n\nexport default class lst_role extends Model {\n  static init(sequelize, DataTypes) {\n  super.init({\n    role: {\n      autoIncrement: true,\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true\n    },\n    name: {\n      type: DataTypes.STRING(31),\n      allowNull: true\n    }\n  }, {\n    sequelize,\n    tableName: 'lst_role',\n    schema: 'public',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"l4w_role_key\",\n        unique: true,\n        fields: [\n          { name: \"role\" },\n        ]\n      },\n    ]\n  });\n  return lst_role;\n  }\n}\n","import * as SequelizeModule from \"sequelize\";\nconst { DataTypes } = SequelizeModule;\nimport pgk from \"sequelize\";\nconst { Model } = pgk;\n\nexport default class usr_event extends Model {\n  static init(sequelize, DataTypes) {\n  super.init({\n    user: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      references: {\n        model: 'usr_list',\n        key: 'user'\n      }\n    },\n    event: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      references: {\n        model: 'lst_event',\n        key: 'event'\n      }\n    },\n    date: {\n      type: DataTypes.DATE,\n      allowNull: true\n    }\n  }, {\n    sequelize,\n    tableName: 'usr_event',\n    schema: 'public',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"usr_event_key\",\n        unique: true,\n        fields: [\n          { name: \"user\" },\n          { name: \"event\" },\n        ]\n      },\n    ]\n  });\n  return usr_event;\n  }\n}\n","import * as SequelizeModule from \"sequelize\";\nconst { DataTypes } = SequelizeModule;\nimport pgk from \"sequelize\";\nconst { Model } = pgk;\n\nexport default class usr_list extends Model {\n  static init(sequelize, DataTypes) {\n  super.init({\n    user: {\n      autoIncrement: true,\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true\n    },\n    mail: {\n      type: DataTypes.STRING(255),\n      allowNull: true\n    }\n  }, {\n    sequelize,\n    tableName: 'usr_list',\n    schema: 'public',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"usr_list_key\",\n        unique: true,\n        fields: [\n          { name: \"user\" },\n        ]\n      },\n    ]\n  });\n  return usr_list;\n  }\n}\n","import * as SequelizeModule from \"sequelize\";\nconst { DataTypes } = SequelizeModule;\nimport pgk from \"sequelize\";\nconst { Model } = pgk;\n\nexport default class usr_role extends Model {\n  static init(sequelize, DataTypes) {\n  super.init({\n    user: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      references: {\n        model: 'usr_list',\n        key: 'user'\n      }\n    },\n    role: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      references: {\n        model: 'lst_role',\n        key: 'role'\n      }\n    }\n  }, {\n    sequelize,\n    tableName: 'usr_role',\n    schema: 'public',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"usr_role_key\",\n        unique: true,\n        fields: [\n          { name: \"user\" },\n          { name: \"role\" },\n        ]\n      },\n    ]\n  });\n  return usr_role;\n  }\n}\n","import * as SequelizeModule from \"sequelize\";\nconst { DataTypes } = SequelizeModule;\nimport pgk from \"sequelize\";\nconst { Model } = pgk;\n\nexport default class usr_save extends Model {\n  static init(sequelize, DataTypes) {\n  super.init({\n    user: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      references: {\n        model: 'usr_list',\n        key: 'user'\n      }\n    },\n    id: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true\n    },\n    date: {\n      type: DataTypes.DATE,\n      allowNull: true\n    },\n    name: {\n      type: DataTypes.CHAR(31),\n      allowNull: true\n    },\n    save: {\n      type: DataTypes.JSON,\n      allowNull: false\n    }\n  }, {\n    sequelize,\n    tableName: 'usr_save',\n    schema: 'public',\n    timestamps: false,\n    indexes: [\n      {\n        name: \"usr_save_key\",\n        unique: true,\n        fields: [\n          { name: \"user\" },\n          { name: \"id\" },\n        ]\n      },\n    ]\n  });\n  return usr_save;\n  }\n}\n","import { lstatSync, readdir } from \"fs\"\nimport { join } from \"path\"\nimport { Response as ExpressResponse } from \"express\";\n\nimport { HttpStatus } from \"../common/Constants\"\n\nconst placeholder = \"404.png\";\n\nexport function sendFile(path: string, filename: string, response: ExpressResponse) {\n    //Send a file as response\n    let options = {\n        dotfiles: \"deny\",\n        headers: {\n            \"x-timestamp\": Date.now(),\n            \"x-sent\": true\n        }\n    };\n    let extension = filename.split(\".\").pop();\n    switch(extension) {\n        case \"json\":\n            response.type(\"application/json\");\n            break;\n        case \"properties\":\n            response.type(\"text/x-java-properties\");\n            break;\n        case \"js\":\n            response.type(\"application/javascript\");\n            break;\n        case \"css\":\n            response.type(\"text/css\");\n            break;\n        case \"woff2\":\n            response.type(\"font/woff2\");\n            break;\n    }\n    let filePath = join(path, filename);\n    response.sendFile(\n        filePath,\n        options,\n        function(err: Error | any) {\n            if (err && response.statusCode !== HttpStatus.NOT_MODIFIED && err.code !== \"ECONNABORT\") {\n                if (response.statusCode === HttpStatus.NOT_FOUND && filename !== placeholder) {\n                    sendFile(path, placeholder, response);\n                } else {\n                    // Do not log requests aborted\n                    if(err.message !== \"Request aborted\") {\n                        console.warn(\"utils.sendFile (file: \" + filePath + \") \" + err);\n                    }\n                    try {\n                        if(err.status !== undefined) {\n                            response.status(err.status).send(\"\");\n                        } else {\n                            response.status(HttpStatus.NO_CONTENT).send(\"\");\n                        }\n                    } catch(e) {\n                        console.error(e);\n                    }\n                }\n            }\n        }\n    );\n};\n\nexport function endsWith(file: string, suffix: string) {\n    return file.indexOf(suffix, file.length - suffix.length) !== -1;\n}\n\n/**\n * List the files in a directory (excluding dirs, hidden, 404)\n * \n * @param filePath path to read\n * @param response array of files (async)\n */\nexport function listFiles(filePath: string, response?: ExpressResponse): Promise<string[]> {\n    return new Promise<string[]>(resolve => {\n        readdir(filePath, (err, files) => {\n            for(let i = 0; i < files.length; i++) {\n                let file = files[i];\n                let is404 = file.startsWith(\"404\")\n                let isHidden = file.startsWith(\".\")\n                let isDirectory = lstatSync(join(filePath, file)).isDirectory();\n                if (is404 || isHidden || isDirectory) {\n                    files.splice(i, 1);\n                    i--;\n                }    \n            }\n            if(err !== null) {\n                console.error(err);\n            }\n            if(response !== undefined) {\n                response.json(files);\n            }\n            resolve(files);\n        })\n    });\n}\n\n/**\n * Return a copy of the input object, containing only number/string/boolean fields\n */\nexport function pruneObject(obj: any): any {\n    let out = {};\n    for(let field in obj) {\n        let val = obj[field];\n        while(Array.isArray(val) && val.length > 0) {\n            val = val[0];\n        }\n        if(typeof val === \"string\" || typeof val === \"boolean\" || typeof val === \"number\") {\n            out[field] = obj[field];\n        }\n    }\n    return out;\n}\n","export namespace constants {\n\n    export enum event {\n        WELCOME = 1\n    }\n    export enum role {\n        MAPPER = 1\n    }\n    \n};","import { IMap } from \"../common/model/Map\";\nimport { IAutoTileset, ITileset } from \"../common/model/Tileset\";\nimport { ISave, IConfig } from \"../common/model/Save\";\nimport { IEvent, IEventState } from \"../common/model/Event\";\nimport { ActionTriggerEnum, DirectionEnum, ScaleEnum } from \"./Commons\"\nimport { gameConfig } from \"../common/GameConfig\";\nimport { ICharacter } from \"./model/Character\";\nimport { IDialogNode, IDialogEdge } from \"./model/Dialog\";\nimport { Utils } from \"./Utils\";\n\nexport namespace DataDefaults {\n\n    export const DEFAULT_ID = -1;\n    export const DEFAULT_ID_STR = DEFAULT_ID + \"\";\n    export const FIRST_ELEM_ID = 0;\n    export const DEFAULT_STR = \"\";\n\n    export function getDialogNode(nodeId?: number): IDialogNode {\n        return {\n            id: nodeId !== undefined? nodeId : DEFAULT_ID\n        };\n    }\n\n    export function getDialogEdge(edgeId?: number): IDialogEdge {\n        return {\n            id: edgeId !== undefined? edgeId : DEFAULT_ID\n        };\n    }\n\n    export function getEmptyMap() : IMap {\n        let map = getMap();\n        for(let layer of map.layers) {\n            layer.data = undefined;\n        }\n        return map;\n    }    \n\n    export function getMap() : IMap {\n        return {\n            id: Utils.getRandomString(),\n            height: 20,\n            width: 25,\n            layers: [\n                {\n                    data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    type: \"tilelayer\",\n                    x: 0,\n                    y: 0\n                },\n                {\n                    type: \"tilelayer\",\n                    x: 0,\n                    y: 0\n                },\n                {\n                    type: \"tilelayer\",\n                    x: 0,\n                    y: 0\n                },\n                {\n                    type: \"tilelayer\",\n                    x: 0,\n                    y: 0\n                }],\n            tileset: getTileset(),\n            events: []\n        };\n    }\n    \n    export function getTileset() : ITileset {\n        return  {\n            image: \"002-Woods01.png\",\n            blocks: [],\n            onTop: [],\n            maxGID: 199\n        };\n    }\n\n    export function getAutoTileset(): IAutoTileset {\n        return {\n            image: \"001-G_Water01.png\",\n            blocked: false,\n            selected: false,\n            frequency: ScaleEnum.MEDIUM\n        };\n    }\n\n    export function getSave(): ISave {\n        return {\n            id: FIRST_ELEM_ID,\n            timestamp: Utils.now(),\n            currentMap: gameConfig.maps.start.map,\n            hero: getHero(),\n            maps: [],\n            config: getConfig(),\n            variables: {}\n        };\n    }\n\n    export function getConfig(): IConfig {\n        return {\n            lang: gameConfig.ui.lang,\n            skin: gameConfig.ui.skin,\n            flagAntialiasing: false,\n            flagDouble: false,\n            flagNatural: false\n        };\n    }\n\n    export function getEvent(): IEvent {\n        let event: IEvent = {\n            id: -1, // The value -1 will be replaced with a incremental id upon saving\n            name: \"NPC\",\n            i: 0,\n            j: 0,\n            states: [getEventState()],\n            memory: {},\n            script: \"\",\n            currentState: 0\n        };\n        return event;\n    };\n     \n    export function getHero(): IEvent {\n        let hero: IEvent = getEvent();\n        hero.name = gameConfig.hero.name;\n        hero.i = gameConfig.maps.start.i;\n        hero.j = gameConfig.maps.start.j;\n        hero.states = [];\n        hero.states[0] = getEventState();\n        hero.states[0].charaset = gameConfig.hero.charaset;\n        return hero;\n    }\n    \n    export function getEventState(): IEventState {\n        return {\n            ...getCharacter(),\n            condition: \"always\",\n            trigger: ActionTriggerEnum.CLICK\n        };\n    };\n\n    export function getString(): string {\n        return \"\";\n    }\n\n    export function getTree() : any {\n        return {};\n    }\n\n    export function getCharacter(): ICharacter {\n        return {\n            direction: DirectionEnum.DOWN\n        };\n    };\n};","export const GLOBAL_GROUP_ID = \"GLOBAL\";","import { IDialogEdge, IDialogNode } from \"../common/model/Dialog\";\nimport { IMap } from \"../common/model/Map\";\n\n/**\n * This module manage sanitizer methods for models.\n * Should be used before writing model object to DB,\n * in order to clean up transient fields and remove\n * any invalid or useless data\n */\n\nexport function sanitizeMap(map: IMap) {\n    delete map.blocks;\n    delete map.dynamicBlocks;\n    delete map.maxEventId;\n    if(map.layers !== undefined) {\n        for(let layer of map.layers) {\n            delete layer.autotileData;\n        }\n    }\n    if(map.autotilesets !== undefined) {\n        for(let autotile of Object.entries(map.autotilesets)) {\n            delete autotile[1].imageData;\n            delete autotile[1].selected;\n        }\n    }\n}\n\nexport function sanitizeDialog(nodesList: IDialogNode[], edgesList: IDialogEdge[]) {\n    for(let node of nodesList) {\n        delete node.message;\n        delete node.edges;\n        delete node.referenced;\n        // Remove unexisting edges\n        if(node.edgeIds !== undefined) {\n            node.edgeIds = node.edgeIds.filter((referencesEdge) => {\n                if(edgesList === undefined) {\n                    return false;\n                }\n                for(let edge of edgesList) {\n                    if(referencesEdge === edge.id) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n    }\n    for(let edge of edgesList) {\n        delete edge.message;\n        delete edge.node;\n        delete edge.nodeReferenced;\n        delete edge.actions;\n    }\n}\n","import { IncomingMessage } from \"http\"\nimport { get, request } from \"https\"\nimport { Request as ExpressRequest, Response as ExpressResponse } from \"express\"\n\nimport { security } from \"./security\"\nimport { IEmptyCallback, IResponseCallback, IBooleanCallback } from \"../common/Commons\";\nimport { IIssueRequest, IIssueResponse } from \"../common/ServerAPI\";\nimport { session } from \"./session\";\nimport { HttpStatus } from \"../common/Constants\";\nimport { Utils } from \"../common/Utils\";\nimport { gameConfig } from \"../common/GameConfig\";\n\n/**\n * This module manage invocation of external services\n */\nexport namespace services {\n\n    export function validateGoogleToken(request: ExpressRequest, response: ExpressResponse, onSuccess: IResponseCallback, onFailure: IEmptyCallback, token: string) {\n        get(gameConfig.services.google.oauth.url + \"/oauth2/v3/tokeninfo?id_token=\" + token, function(res: IncomingMessage) {\n            let authResponse: string = \"\";\n            res.on(\"data\", function(buffer: string) {\n                authResponse += buffer;\n            });\n            res.on(\"end\", function() {\n                try {\n                    let auth = JSON.parse(authResponse);\n                    if(security.validateGoogleTokeninfoResponse(auth)) {\n                        onSuccess(auth.email);\n                    } else {\n                        // Authentication failed\n                        onFailure();\n                    }\n                } catch(e) {\n                    console.error(\"Unrecoverable session:\");\n                    console.error(e);\n                    onFailure();\n                }\n            });\n        }).on(\"error\", function(e: Error) {\n            // Google API problem\n            console.error(e);\n            onFailure();\n        });\n    }\n\n    export function validateFacebookToken(request: ExpressRequest, response: ExpressResponse, onSuccess: IResponseCallback, onFailure: IEmptyCallback, token: string, userId?: string) {\n        if(Utils.isEmpty(process.env.FACEBOOK_SECRET)) {\n            console.error(\"No env variable FACEBOOK_SECRET defined\");\n            onFailure();\n            return;\n        }\n        let access_token = gameConfig.services.facebook.applicationId + \"|\" + process.env.FACEBOOK_SECRET;\n        get(gameConfig.services.facebook.url + \"/debug_token?input_token=\" + token + \"&access_token=\" + access_token, function(res: IncomingMessage) {\n            let authResponse: string = \"\";\n            res.on(\"data\", function(buffer: string) {\n                authResponse += buffer;\n            });\n            res.on(\"end\", function() {\n                try {\n                    let auth = JSON.parse(authResponse);\n                    if(security.validateFacebookTokeninfoResponse(auth.data, userId)) {\n                        get(gameConfig.services.facebook.url + \"/\" + userId + \"?fields=email&access_token=\" + token, function(res: IncomingMessage) {\n                            let graphResponse: string = \"\";\n                            res.on(\"data\", function(buffer: string) {\n                                graphResponse += buffer;\n                            });\n                            res.on(\"end\", function() {\n                                try {\n                                    let graphData = JSON.parse(graphResponse);    \n                                    onSuccess(graphData.email);\n                                } catch(e) {\n                                    console.error(\"Cannot read graph response\");\n                                    console.error(e);\n                                    onFailure();\n                                }\n                            });\n\n                        }).on(\"error\", function(e: Error) {\n                            // Facebook API problem\n                            console.error(e);\n                            onFailure();\n                        });\n                    } else {\n                        // Authentication failed\n                        onFailure();\n                    }\n                } catch(e) {\n                    console.error(\"Unrecoverable session:\");\n                    console.error(e);\n                    onFailure();\n                }\n            });\n        }).on(\"error\", function(e: Error) {\n            // Facebook API problem\n            console.error(e);\n            onFailure();\n        });\n    }\n\n    export function validateReCaptchaToken(request: ExpressRequest, response: ExpressResponse, callback: IBooleanCallback, token: string, ip: string) {\n        let body = \"secret=\" + process.env.RECAPTCHA_SECRET + \"&response=\" + token + \"&remoteip=\" + ip;\n        let headers = {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n        post(gameConfig.services.google.recaptcha.url, \"/recaptcha/api/siteverify\", body, headers, function(responseBody?: string) {\n            try {\n                if(responseBody === undefined) {\n                    response.status(HttpStatus.INTERNAL_SERVER_ERROR).send(\"\");\n                } else {\n                    let gResponse = JSON.parse(responseBody);\n                    callback(security.validateGoogleReCaptchaResponse(gResponse));\n                }\n            } catch(e) {\n                console.error(\"Cannot read Google ReCaptcha response\");\n                console.error(e);\n                callback(false);\n            }\n        });\n    }\n\n    const ACCEPTED_LABELS = [\n        \"bug\", \"enhancement\", \"question\"\n    ]\n\n    export function openGitHubIssue(request: ExpressRequest, response: ExpressResponse, req: IIssueRequest): void {\n        let user = session.getUser(request);\n        if(user === undefined) {\n            console.error(\"Cannot open issue if there is no valid session\");\n            response.status(HttpStatus.FORBIDDEN).send(\"\");\n            return;\n        }\n        if(Utils.isEmpty(process.env.GITHUB_TOKEN)) {\n            console.error(\"No env variable GITHUB_TOKEN defined\");\n            response.status(HttpStatus.INTERNAL_SERVER_ERROR).send(\"\");\n            return;\n        }\n        let issueDescription = \"Issue generated from L4W bug reporting interface\\nUser #\" + user + \" wrote:\\n> \";\n        issueDescription += security.sanitizeIssueDescription(req.description);\n        let body = {\n            title: \"Feedback by \" + user,\n            body: issueDescription,\n            labels: <string[]> []\n        };\n        if(req.label !== undefined && ACCEPTED_LABELS.includes(req.label)) {\n            body.labels.push(req.label);\n        }\n        let headers = {\n            \"Accept\": \"application/vnd.github.v3+json\", // https://developer.github.com/v3/#current-version\n            \"Authorization\": \"token \" + process.env.GITHUB_TOKEN, // https://developer.github.com/v3/auth/#basic-authentication\n            \"User-Agent\": \"giovannipessiva\" // https://developer.github.com/v3/#user-agent-required\n        }\n        post(gameConfig.services.github.url, \"/repos/giovannipessiva/l4w/issues\", JSON.stringify(body), headers, function(responseBody?: string) {\n            try {\n                if(responseBody === undefined) {\n                    response.status(HttpStatus.INTERNAL_SERVER_ERROR).send(\"\");\n                } else {\n                    let ghResponse = JSON.parse(responseBody);\n                    let res: IIssueResponse = {\n                        url: ghResponse.html_url\n                    }\n                    response.json(res);\n                }\n            } catch(e) {\n                console.error(\"Cannot read GitHub response\");\n                console.error(e);\n                response.status(HttpStatus.INTERNAL_SERVER_ERROR).send(\"\");\n            }\n        });\n    }\n\n    function post(host: string, path: string, body: string, headers: any, callback: IResponseCallback) {\n        let options = {\n            protocol: \"https:\",\n            host: host,\n            path: path,\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Content-Length\": Buffer.byteLength(body)\n            }\n        };\n        Object.assign(options.headers, headers);\n        let req = request(options, function(res) {\n            let responseBody = \"\";\n            res.setEncoding(\"utf8\");\n            res.on(\"data\", function(buffer: string) {\n                responseBody += buffer;\n            }).on(\"end\", function() {\n                callback(responseBody);\n            }).on(\"error\", function(e: Error) {\n                console.error(e);\n                callback();\n            });\n        });\n        req.write(body);\n        req.end();\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { join, resolve } from \"path\"\n//@ts-ignore\nimport express from \"express\"\nimport { Request as ExpressRequest, Response as ExpressResponse, NextFunction } from \"express\"\nimport { Express } from \"express-serve-static-core\"\n//@ts-ignore\nimport compression from \"compression\"\nimport { readFile } from \"fs\"\nimport { createServer } from \"https\"\n\nimport { HttpStatus, ResourceType } from \"../common/Constants\"\nimport { Utils } from \"../common/Utils\"\nimport { session } from \"./session\"\nimport * as utils from \"./utils\"\nimport { isDevEnv, security } from \"./security\"\nimport { database } from \"./database\"\nimport { IAuthResponse, IHealthResponse, IIssueRequest } from \"../common/ServerAPI\"\nimport { services } from \"./services\"\n\n// Database initialization\ndatabase.init().then(onDatabaseInit);\n\n// Server initialization (will initialize session middleware only when DB is available)\nfunction onDatabaseInit(flagDBAvailable: boolean) {\n    let app: Express = express();\n    app.set(\"port\",(process.env.PORT || 5000));\n\n    // Middleware\n    if(flagDBAvailable) {\n        app.use(session.init());\n    }\n    app.use(compression());\n    app.use(function(req: ExpressRequest, res: ExpressResponse, next: NextFunction) {\n        // Remove trailing slash\n        if (req.path.substr(-1) === \"/\" && req.path.length > 1) {\n            let query = req.url.slice(req.path.length);\n            res.redirect(HttpStatus.MOVED_PERMANENTLY, req.path.slice(0, -1) + query);\n        } else {\n            next();\n        }\n    });\n    app.use(function(req: ExpressRequest, res: ExpressResponse, next: NextFunction) {\n        security.requestFilter(req, res);\n        next();\n    });\n\n    // Views redirection\n    const viewPath = resolve(\"views\");\n    app.all(\"/\", function(request: ExpressRequest, response: ExpressResponse) {\n        utils.sendFile(viewPath, \"home.html\", response);\n    });\n    app.all(\"/edit\", function(request: ExpressRequest, response: ExpressResponse) {\n        utils.sendFile(viewPath, \"hub.html\", response);\n    });\n    app.all(\"/edit/:editor\", function(request: ExpressRequest, response: ExpressResponse) {\n        let editor = request.params.editor;\n        utils.sendFile(viewPath, editor + \".html\", response);\n    });\n    app.all(\"/test\", function(request: ExpressRequest, response: ExpressResponse) {\n        utils.sendFile(viewPath, \"test.html\", response);\n    });\n    app.all(\"/privacy\", function(request: ExpressRequest, response: ExpressResponse) {\n        utils.sendFile(viewPath, \"privacy.html\", response);\n    });\n\n    // Resources redirection\n    const jsPath = resolve(join(\"dist\", \"client\"));\n    app.get(\"/js/:script\", function(request: ExpressRequest, response: ExpressResponse) {\n        let file: string = request.params.script;\n        if(isDevEnv()) {\n            // In development, use files with sourcemaps\n            file = file.replace(\".min.\",\".\");\n        }\n        utils.sendFile(jsPath, file, response);\n    });\n    let libPath = resolve(join(\"assets\", \"lib\"));\n    app.get(\"/lib/:script\", function(request: ExpressRequest, response: ExpressResponse) {\n        let file = request.params.script;\n        utils.sendFile(libPath, file, response);\n    });\n    app.get(\"/data/:type/:file\", function(request: ExpressRequest, response: ExpressResponse) {\n        let file = request.params.file;\n        let type: ResourceType = Utils.convertStringToEnum<ResourceType>(ResourceType, request.params.type);\n        if (type === ResourceType.CONFIGURATION) {\n            let filePath = resolve(join(\"data\", ResourceType.CONFIGURATION));\n            utils.sendFile(filePath, file, response);\n            return;\n        } else {\n            let lang = <string | undefined> request.headers.lang;\n            database.read(type, file, session.getUser(request), response, lang);\n        }\n    });\n    const assetsPath = resolve(\"assets\");\n    app.get(\"/assets/:file\", function(request: ExpressRequest, response: ExpressResponse) {\n        let file = request.params.file;\n        utils.sendFile(assetsPath, file, response);\n    });\n    app.get(\"/assets/:type/:file\", function(request: ExpressRequest, response: ExpressResponse) {\n        let file = request.params.file;\n        let type: ResourceType = Utils.convertStringToEnum<ResourceType>(ResourceType, request.params.type);\n        let filePath = resolve(join(\"assets\", type));\n        utils.sendFile(filePath, file, response);\n    });\n    app.get(\"/assetlist/:type/\", function(request: ExpressRequest, response: ExpressResponse) {\n        let type: ResourceType = Utils.convertStringToEnum<ResourceType>(ResourceType, request.params.type);\n        let filePath = resolve(join(\"assets\", type));\n        utils.listFiles(filePath, response);\n    });\n    const stylePath = resolve(join(\"style\"));\n    app.get(\"/style/:file\", function(request: ExpressRequest, response: ExpressResponse) {\n        let file = request.params.file;\n        utils.sendFile(stylePath, file, response);\n    });\n    app.get(\"/style/:path/:file\", function(request: ExpressRequest, response: ExpressResponse) {\n        let pathS = request.params.path;\n        let file = request.params.file;\n        let filePath = resolve(join(\"style\", pathS));\n        utils.sendFile(filePath, file, response);\n    });\n    let workersPath = resolve(join(\"src\", \"workers\"));\n    app.get(\"/workers/:script\", function(request: ExpressRequest, response: ExpressResponse) {\n        let file = request.params.script;\n        response.set(\"Service-Worker-Allowed\", \"..\")\n        utils.sendFile(workersPath, file, response);\n    });\n\n    // Server logic\n    app.post(\"/edit/:type/:id\", function(request: ExpressRequest, response: ExpressResponse) {\n        if(session.isAuthenticated(request)) {\n            let fileId = request.params.id;\n            let type: ResourceType = Utils.convertStringToEnum<ResourceType>(ResourceType, request.params.type);\n            security.getBodyData(request, response, function(data: any){\n                database.write(type, fileId, data, session.getUser(request)!, response);\n            });\n        } else {\n            response.status(HttpStatus.FORBIDDEN).send(\"\");\n        }\n    });\n    app.get(\"/news\", function(request: ExpressRequest, response: ExpressResponse) {\n        if(session.isAuthenticated(request)) {\n            database.getNews(session.getUser(request)!, response);\n        } else {\n            response.status(HttpStatus.FORBIDDEN).send(\"\");\n        }\n    });\n    app.get(\"/v\", function(request: ExpressRequest, response: ExpressResponse) {\n        readFile(\"package.json\", \"utf8\", function(err: NodeJS.ErrnoException | null, data: string | Buffer) {\n            if(err !== null) {\n                console.error(err);\n                response.status(HttpStatus.INTERNAL_SERVER_ERROR).send(\"\");\n            } else {\n                let packageJson = JSON.parse(<string> data);\n                response.send(packageJson.name + \" \" + packageJson.version);\n            }\n        });\n    });\n    app.post(\"/auth\", function(request: ExpressRequest, response: ExpressResponse) {\n        let authResponse: IAuthResponse;\n        session.doLogin(request, response,\n            () => {\n                authResponse = {\n                    result: true\n                }\n                try {\n                    response.json(authResponse);\n                } catch(e) {\n                    console.warn(\"Exception catched on response.json(): \");\n                    console.trace(e);\n                }\n            },\n            () => {\n                console.error(\"Login failed\");\n                authResponse = {\n                    result: false\n                }\n                response.json(authResponse);\n            }\n        );\n    });\n    app.get(\"/logout\", function(request: ExpressRequest, response: ExpressResponse) {\n        session.doLogout(request, response, () => {\n            response.send(\"\");\n        });\n    });\n    app.post(\"/issue\", function(request: ExpressRequest, response: ExpressResponse) {\n        security.getBodyData(request, response, (data: any) => {\n            let req: IIssueRequest;\n            try {\n                req = JSON.parse(data);\n            } catch(e) {\n                console.error(\"Cannot parse body: \");\n                console.error(data);\n                response.status(HttpStatus.BAD_REQUEST).send(\"\");\n                return;\n            }\n            let reCaptchaCallback = function(success: boolean) {\n                if(success) {\n                    services.openGitHubIssue(request, response, req);\n                } else {\n                    console.error(\"ReCaptcha token validation failed\");\n                    response.status(HttpStatus.BAD_REQUEST).send(\"\");\n                }\n            }\n            services.validateReCaptchaToken(request, response, reCaptchaCallback, req.captchaToken, request.ip);\n        });\n    });\n    app.get(\"/health\", function(request: ExpressRequest, response: ExpressResponse) {\n        let healthResponse: IHealthResponse = {\n            database: flagDBAvailable\n        }\n        response.status(HttpStatus.OK).send(healthResponse);\n    });\n    app.all(\"/teapot\", function(request: ExpressRequest, response: ExpressResponse) {\n        response.status(HttpStatus.IM_A_TEAPOT).send(\"🫖\");\n    });\n\n    let server;\n    let port = app.get(\"port\");\n    if(!isDevEnv()) {\n        // Hosting provider will take care of HTTPS\n        server = app.listen(port);\n    } else {\n        // Setup HTTPS with self-signed cert for local dev\n        server = createServer(security.getLocalServerOptions(), app).listen(port);\n    }\n    server.on(\"listening\", function() {\n        console.log(\"L4W is running on port\", port);\n    }).on(\"error\", function(err: any) {\n        console.trace(err);\n        if(err.code === \"EADDRINUSE\") {\n            console.error(\"Another instance is already running on port \" + err.port);\n        } else {\n            console.error(err);\n        }\n        process.exit();\n    });\n}"],"names":[],"sourceRoot":""}